package internal

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestParsing(t *testing.T) {
	cases := []struct {
		name     string
		input    []byte
		expected Message
	}{
		{
			name: "One answer",
			input: []byte{
				0xAA, 0xAA, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07, 0x65, 0x78, 0x61, 0x6D, 0x70, 0x6C, 0x65, 0x03, 0x63, 0x6F, 0x6D, 0x00, 0x00, 0x01, 0x00, 0x01, 0xC0, 0x0C, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x04, 0x5D, 0xB8, 0xD8, 0x22,
			},
			expected: Message{
				Header: Header{
					id:      0xAAAA,
					flags:   0x8180,
					qdcount: 0x0001,
					ancount: 0x0001,
					arcount: 0x0,
					nscount: 0x0,
				},
				Question: []Question{
					{
						qname:  []byte{0x07, 0x65, 0x78, 0x61, 0x6D, 0x70, 0x6C, 0x65, 0x03, 0x63, 0x6F, 0x6D, 0x00},
						qtype:  0x0001,
						qclass: 0x0001,
					},
				},
				Answer: []ResourceRecord{
					{
						name:     []byte{0xc0, 0x0c},
						t:        0x0001,
						class:    0x0001,
						ttl:      0x3c,
						rdlength: 0x04,
						rdata:    []byte{0x5D, 0xB8, 0xD8, 0x22},
					},
				},
				Authority:  []ResourceRecord{},
				Additional: []ResourceRecord{},
			},
		},
	}

	for _, tc := range cases {
		t.Run(tc.name, func(t *testing.T) {
			output, err := Parse(tc.input)
			assert.NoError(t, err)
			assert.Equal(t, tc.expected, output)
		})
	}
}
